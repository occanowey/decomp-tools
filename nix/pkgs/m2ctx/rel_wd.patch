diff --git a/m2ctx.py b/m2ctx.py
index e5acd6e..48c3a80 100755
--- a/m2ctx.py
+++ b/m2ctx.py
@@ -6,10 +6,6 @@ import sys
 import subprocess
 import tempfile
 
-script_dir = os.path.dirname(os.path.realpath(__file__))
-root_dir = os.path.abspath(os.path.join(script_dir, ".."))
-src_dir = root_dir + "src/"
-
 # Project-specific
 CPP_FLAGS = [
     "-Iinclude",
@@ -26,15 +22,13 @@ CPP_FLAGS = [
 ]
 
 def import_c_file(in_file) -> str:
-    in_file = os.path.relpath(in_file, root_dir)
-
     cpp_command = ["gcc", "-E", "-P", "-dD", *CPP_FLAGS, in_file]
 
     with tempfile.NamedTemporaryFile(suffix=".c") as tmp:
-        stock_macros = subprocess.check_output(["gcc", "-E", "-P", "-dM", tmp.name], cwd=root_dir, encoding="utf-8")
+        stock_macros = subprocess.check_output(["gcc", "-E", "-P", "-dM", tmp.name], encoding="utf-8")
 
     try:
-        out_text = subprocess.check_output(cpp_command, cwd=root_dir, encoding="utf-8")
+        out_text = subprocess.check_output(cpp_command, encoding="utf-8")
     except subprocess.CalledProcessError:
         print(
             "Failed to preprocess input file, when running command:\n"
@@ -72,14 +66,18 @@ def main():
         description="""Create a context file which can be used for m2c / decomp.me"""
     )
     parser.add_argument(
-        "c_file",
+        "in_file",
         help="""File from which to create context""",
     )
+    parser.add_argument(
+        "out_file",
+        help="""File to which to write context""",
+    )
     args = parser.parse_args()
 
-    output = import_c_file(args.c_file)
+    output = import_c_file(args.in_file)
 
-    with open(os.path.join(root_dir, "ctx.c"), "w", encoding="UTF-8") as f:
+    with open(args.out_file, "w", encoding="UTF-8") as f:
         f.write(output)
 
 
